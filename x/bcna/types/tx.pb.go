// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bcna/bcna/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateBitcannaid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bcnaid  string `protobuf:"bytes,2,opt,name=bcnaid,proto3" json:"bcnaid,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateBitcannaid) Reset()         { *m = MsgCreateBitcannaid{} }
func (m *MsgCreateBitcannaid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBitcannaid) ProtoMessage()    {}
func (*MsgCreateBitcannaid) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{2}
}
func (m *MsgCreateBitcannaid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBitcannaid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBitcannaid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBitcannaid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBitcannaid.Merge(m, src)
}
func (m *MsgCreateBitcannaid) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBitcannaid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBitcannaid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBitcannaid proto.InternalMessageInfo

func (m *MsgCreateBitcannaid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateBitcannaid) GetBcnaid() string {
	if m != nil {
		return m.Bcnaid
	}
	return ""
}

func (m *MsgCreateBitcannaid) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateBitcannaidResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateBitcannaidResponse) Reset()         { *m = MsgCreateBitcannaidResponse{} }
func (m *MsgCreateBitcannaidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBitcannaidResponse) ProtoMessage()    {}
func (*MsgCreateBitcannaidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{3}
}
func (m *MsgCreateBitcannaidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBitcannaidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBitcannaidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBitcannaidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBitcannaidResponse.Merge(m, src)
}
func (m *MsgCreateBitcannaidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBitcannaidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBitcannaidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBitcannaidResponse proto.InternalMessageInfo

func (m *MsgCreateBitcannaidResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateBitcannaid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Bcnaid  string `protobuf:"bytes,3,opt,name=bcnaid,proto3" json:"bcnaid,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateBitcannaid) Reset()         { *m = MsgUpdateBitcannaid{} }
func (m *MsgUpdateBitcannaid) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBitcannaid) ProtoMessage()    {}
func (*MsgUpdateBitcannaid) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{4}
}
func (m *MsgUpdateBitcannaid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBitcannaid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBitcannaid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBitcannaid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBitcannaid.Merge(m, src)
}
func (m *MsgUpdateBitcannaid) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBitcannaid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBitcannaid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBitcannaid proto.InternalMessageInfo

func (m *MsgUpdateBitcannaid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateBitcannaid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateBitcannaid) GetBcnaid() string {
	if m != nil {
		return m.Bcnaid
	}
	return ""
}

func (m *MsgUpdateBitcannaid) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateBitcannaidResponse struct {
}

func (m *MsgUpdateBitcannaidResponse) Reset()         { *m = MsgUpdateBitcannaidResponse{} }
func (m *MsgUpdateBitcannaidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBitcannaidResponse) ProtoMessage()    {}
func (*MsgUpdateBitcannaidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{5}
}
func (m *MsgUpdateBitcannaidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBitcannaidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBitcannaidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBitcannaidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBitcannaidResponse.Merge(m, src)
}
func (m *MsgUpdateBitcannaidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBitcannaidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBitcannaidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBitcannaidResponse proto.InternalMessageInfo

type MsgDeleteBitcannaid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteBitcannaid) Reset()         { *m = MsgDeleteBitcannaid{} }
func (m *MsgDeleteBitcannaid) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBitcannaid) ProtoMessage()    {}
func (*MsgDeleteBitcannaid) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{6}
}
func (m *MsgDeleteBitcannaid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBitcannaid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBitcannaid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBitcannaid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBitcannaid.Merge(m, src)
}
func (m *MsgDeleteBitcannaid) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBitcannaid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBitcannaid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBitcannaid proto.InternalMessageInfo

func (m *MsgDeleteBitcannaid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBitcannaid) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteBitcannaidResponse struct {
}

func (m *MsgDeleteBitcannaidResponse) Reset()         { *m = MsgDeleteBitcannaidResponse{} }
func (m *MsgDeleteBitcannaidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBitcannaidResponse) ProtoMessage()    {}
func (*MsgDeleteBitcannaidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{7}
}
func (m *MsgDeleteBitcannaidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBitcannaidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBitcannaidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBitcannaidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBitcannaidResponse.Merge(m, src)
}
func (m *MsgDeleteBitcannaidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBitcannaidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBitcannaidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBitcannaidResponse proto.InternalMessageInfo

type MsgCreateSupplychain struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Product     string `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Info        string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Supplyinfo  string `protobuf:"bytes,4,opt,name=supplyinfo,proto3" json:"supplyinfo,omitempty"`
	Supplyextra string `protobuf:"bytes,5,opt,name=supplyextra,proto3" json:"supplyextra,omitempty"`
}

func (m *MsgCreateSupplychain) Reset()         { *m = MsgCreateSupplychain{} }
func (m *MsgCreateSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSupplychain) ProtoMessage()    {}
func (*MsgCreateSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{8}
}
func (m *MsgCreateSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSupplychain.Merge(m, src)
}
func (m *MsgCreateSupplychain) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSupplychain proto.InternalMessageInfo

func (m *MsgCreateSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSupplychain) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *MsgCreateSupplychain) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *MsgCreateSupplychain) GetSupplyinfo() string {
	if m != nil {
		return m.Supplyinfo
	}
	return ""
}

func (m *MsgCreateSupplychain) GetSupplyextra() string {
	if m != nil {
		return m.Supplyextra
	}
	return ""
}

type MsgCreateSupplychainResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSupplychainResponse) Reset()         { *m = MsgCreateSupplychainResponse{} }
func (m *MsgCreateSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSupplychainResponse) ProtoMessage()    {}
func (*MsgCreateSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{9}
}
func (m *MsgCreateSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSupplychainResponse.Merge(m, src)
}
func (m *MsgCreateSupplychainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSupplychainResponse proto.InternalMessageInfo

func (m *MsgCreateSupplychainResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSupplychain struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Product     string `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Info        string `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Supplyinfo  string `protobuf:"bytes,5,opt,name=supplyinfo,proto3" json:"supplyinfo,omitempty"`
	Supplyextra string `protobuf:"bytes,6,opt,name=supplyextra,proto3" json:"supplyextra,omitempty"`
}

func (m *MsgUpdateSupplychain) Reset()         { *m = MsgUpdateSupplychain{} }
func (m *MsgUpdateSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSupplychain) ProtoMessage()    {}
func (*MsgUpdateSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{10}
}
func (m *MsgUpdateSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSupplychain.Merge(m, src)
}
func (m *MsgUpdateSupplychain) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSupplychain proto.InternalMessageInfo

func (m *MsgUpdateSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSupplychain) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetSupplyinfo() string {
	if m != nil {
		return m.Supplyinfo
	}
	return ""
}

func (m *MsgUpdateSupplychain) GetSupplyextra() string {
	if m != nil {
		return m.Supplyextra
	}
	return ""
}

type MsgUpdateSupplychainResponse struct {
}

func (m *MsgUpdateSupplychainResponse) Reset()         { *m = MsgUpdateSupplychainResponse{} }
func (m *MsgUpdateSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSupplychainResponse) ProtoMessage()    {}
func (*MsgUpdateSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{11}
}
func (m *MsgUpdateSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSupplychainResponse.Merge(m, src)
}
func (m *MsgUpdateSupplychainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSupplychainResponse proto.InternalMessageInfo

type MsgDeleteSupplychain struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSupplychain) Reset()         { *m = MsgDeleteSupplychain{} }
func (m *MsgDeleteSupplychain) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSupplychain) ProtoMessage()    {}
func (*MsgDeleteSupplychain) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{12}
}
func (m *MsgDeleteSupplychain) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSupplychain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSupplychain.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSupplychain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSupplychain.Merge(m, src)
}
func (m *MsgDeleteSupplychain) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSupplychain) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSupplychain.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSupplychain proto.InternalMessageInfo

func (m *MsgDeleteSupplychain) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSupplychain) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSupplychainResponse struct {
}

func (m *MsgDeleteSupplychainResponse) Reset()         { *m = MsgDeleteSupplychainResponse{} }
func (m *MsgDeleteSupplychainResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSupplychainResponse) ProtoMessage()    {}
func (*MsgDeleteSupplychainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6fed32b8bb1da5f, []int{13}
}
func (m *MsgDeleteSupplychainResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSupplychainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSupplychainResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSupplychainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSupplychainResponse.Merge(m, src)
}
func (m *MsgDeleteSupplychainResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSupplychainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSupplychainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSupplychainResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "bcna.bcna.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "bcna.bcna.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateBitcannaid)(nil), "bcna.bcna.MsgCreateBitcannaid")
	proto.RegisterType((*MsgCreateBitcannaidResponse)(nil), "bcna.bcna.MsgCreateBitcannaidResponse")
	proto.RegisterType((*MsgUpdateBitcannaid)(nil), "bcna.bcna.MsgUpdateBitcannaid")
	proto.RegisterType((*MsgUpdateBitcannaidResponse)(nil), "bcna.bcna.MsgUpdateBitcannaidResponse")
	proto.RegisterType((*MsgDeleteBitcannaid)(nil), "bcna.bcna.MsgDeleteBitcannaid")
	proto.RegisterType((*MsgDeleteBitcannaidResponse)(nil), "bcna.bcna.MsgDeleteBitcannaidResponse")
	proto.RegisterType((*MsgCreateSupplychain)(nil), "bcna.bcna.MsgCreateSupplychain")
	proto.RegisterType((*MsgCreateSupplychainResponse)(nil), "bcna.bcna.MsgCreateSupplychainResponse")
	proto.RegisterType((*MsgUpdateSupplychain)(nil), "bcna.bcna.MsgUpdateSupplychain")
	proto.RegisterType((*MsgUpdateSupplychainResponse)(nil), "bcna.bcna.MsgUpdateSupplychainResponse")
	proto.RegisterType((*MsgDeleteSupplychain)(nil), "bcna.bcna.MsgDeleteSupplychain")
	proto.RegisterType((*MsgDeleteSupplychainResponse)(nil), "bcna.bcna.MsgDeleteSupplychainResponse")
}

func init() { proto.RegisterFile("bcna/bcna/tx.proto", fileDescriptor_b6fed32b8bb1da5f) }

var fileDescriptor_b6fed32b8bb1da5f = []byte{
	// 690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x3b, 0x6f, 0xd4, 0x4c,
	0x14, 0x5d, 0xef, 0x2b, 0xda, 0x49, 0xf4, 0x7d, 0x64, 0x88, 0x12, 0xc7, 0x01, 0x6f, 0xb4, 0x05,
	0x44, 0x41, 0xb1, 0x45, 0x40, 0x14, 0xe9, 0xd8, 0x80, 0xa8, 0x36, 0x42, 0x8e, 0x68, 0x22, 0x21,
	0x34, 0x6b, 0x1b, 0x67, 0xa4, 0x5d, 0x8f, 0xe5, 0x99, 0x45, 0x49, 0x05, 0xa2, 0x44, 0x42, 0xe2,
	0x67, 0x50, 0x41, 0x0a, 0x6a, 0xea, 0x94, 0x11, 0x15, 0x15, 0x42, 0x49, 0x91, 0xbf, 0x81, 0x66,
	0xc6, 0xaf, 0xf8, 0xb1, 0x1b, 0xa5, 0xf1, 0xee, 0xbd, 0x67, 0xe6, 0xdc, 0x73, 0xee, 0xbc, 0x00,
	0x1c, 0xda, 0x3e, 0x32, 0xc5, 0x87, 0x1d, 0x19, 0x41, 0x48, 0x18, 0x81, 0x1d, 0x1e, 0x1a, 0xfc,
	0xa3, 0x2d, 0xa2, 0x31, 0xf6, 0x89, 0x29, 0xbe, 0x12, 0xd5, 0x56, 0x6c, 0x42, 0xc7, 0x84, 0x9a,
	0x63, 0xea, 0x99, 0xef, 0x1e, 0xf2, 0x9f, 0x08, 0x58, 0x95, 0xc0, 0x1b, 0x11, 0x99, 0x32, 0x88,
	0xa0, 0x25, 0x8f, 0x78, 0x44, 0xe6, 0xf9, 0xbf, 0x28, 0xbb, 0x9c, 0xd6, 0x0e, 0x50, 0x88, 0xc6,
	0xf1, 0x68, 0x2d, 0xcd, 0x0f, 0x31, 0xb3, 0x91, 0xef, 0x23, 0xec, 0x44, 0xd8, 0x5a, 0x8a, 0xd1,
	0x49, 0x10, 0x8c, 0x8e, 0xed, 0x43, 0x84, 0x7d, 0x09, 0xf6, 0xbe, 0x2b, 0xe0, 0xff, 0x01, 0xf5,
	0x5e, 0x05, 0x0e, 0x62, 0xee, 0x4b, 0x41, 0x09, 0x9f, 0x80, 0x0e, 0x9a, 0xb0, 0x43, 0x12, 0x62,
	0x76, 0xac, 0x2a, 0xeb, 0xca, 0x46, 0xa7, 0xaf, 0xfe, 0xfa, 0xb1, 0xb5, 0x14, 0xe9, 0x7b, 0xea,
	0x38, 0xa1, 0x4b, 0xe9, 0x3e, 0x0b, 0xb1, 0xef, 0x59, 0xe9, 0x50, 0xf8, 0x18, 0xb4, 0xa5, 0x28,
	0xb5, 0xbe, 0xae, 0x6c, 0xcc, 0x6f, 0x2f, 0x1a, 0x49, 0x57, 0x0c, 0x49, 0xdd, 0xef, 0x9c, 0xfe,
	0xe9, 0xd6, 0xbe, 0x5e, 0x9e, 0x6c, 0x2a, 0x56, 0x34, 0x76, 0xc7, 0xf8, 0x78, 0x79, 0xb2, 0x99,
	0xb2, 0x7c, 0xba, 0x3c, 0xd9, 0x94, 0x8a, 0x8f, 0xa4, 0xe6, 0x9c, 0xba, 0xde, 0x2a, 0x58, 0xc9,
	0xa5, 0x2c, 0x97, 0x06, 0xc4, 0xa7, 0x6e, 0x8f, 0x80, 0xdb, 0x03, 0xea, 0xed, 0x86, 0x2e, 0x62,
	0x6e, 0x3f, 0x69, 0x03, 0x54, 0xc1, 0x9c, 0xcd, 0x73, 0x24, 0x94, 0x6e, 0xac, 0x38, 0x84, 0xcb,
	0xa0, 0xcd, 0x6b, 0x60, 0x47, 0x28, 0xee, 0x58, 0x51, 0xc4, 0x67, 0x20, 0xe9, 0x52, 0x6d, 0xc8,
	0x19, 0x51, 0xb8, 0xb3, 0xc0, 0xd5, 0xc6, 0xf3, 0x7b, 0x5b, 0x60, 0xad, 0xa4, 0x60, 0xac, 0x07,
	0xfe, 0x07, 0xea, 0xd8, 0x11, 0x35, 0x9b, 0x56, 0x1d, 0x3b, 0xbd, 0xf7, 0x42, 0x9f, 0x94, 0x7e,
	0x2d, 0x7d, 0x92, 0xa0, 0x1e, 0x13, 0x64, 0xf4, 0x36, 0xaa, 0xf4, 0x36, 0xa7, 0xe9, 0xbd, 0x2b,
	0xf4, 0xe6, 0x05, 0x24, 0xfd, 0x1b, 0x08, 0x7d, 0xcf, 0xdc, 0x91, 0x7b, 0x33, 0x7d, 0xa5, 0xd5,
	0xf2, 0x74, 0x49, 0xb5, 0x6f, 0x0a, 0x58, 0x4a, 0xba, 0xb7, 0x9f, 0xee, 0xcc, 0x29, 0xf5, 0x54,
	0x30, 0x17, 0x84, 0xc4, 0x99, 0xd8, 0x2c, 0x5a, 0xb0, 0x38, 0x84, 0x10, 0x34, 0xb1, 0xff, 0x96,
	0x44, 0x7d, 0x11, 0xff, 0xa1, 0x0e, 0x80, 0xdc, 0xf0, 0x02, 0x91, 0x8d, 0xc9, 0x64, 0xe0, 0x3a,
	0x98, 0x97, 0x91, 0x7b, 0xc4, 0x42, 0xa4, 0xb6, 0xc4, 0x80, 0x6c, 0x2a, 0xe7, 0xc7, 0x00, 0x77,
	0xca, 0xf4, 0x56, 0x2e, 0xf7, 0x4f, 0x69, 0x50, 0xb6, 0xfb, 0x7a, 0x06, 0xf3, 0x0b, 0x9e, 0x31,
	0xdc, 0x28, 0x37, 0xdc, 0xac, 0x34, 0xdc, 0x9a, 0x65, 0xb8, 0x3d, 0xcb, 0xb0, 0x2e, 0x0c, 0x17,
	0xf4, 0x27, 0x2b, 0xb8, 0x27, 0xfc, 0xc9, 0x05, 0xbe, 0x91, 0xbf, 0xd2, 0x7a, 0x05, 0xbe, 0xb8,
	0xde, 0xf6, 0xe7, 0x16, 0x68, 0x0c, 0xa8, 0x07, 0xf7, 0xc0, 0xc2, 0x95, 0x0b, 0x4b, 0xcb, 0x5c,
	0x34, 0xb9, 0xbb, 0x41, 0xeb, 0x55, 0x63, 0xc9, 0xc2, 0x1d, 0x80, 0x5b, 0x85, 0x4b, 0x43, 0xbf,
	0x3a, 0x2f, 0x8f, 0x6b, 0xf7, 0xa6, 0xe3, 0x59, 0xee, 0xc2, 0x81, 0xd7, 0xcb, 0x34, 0x55, 0x73,
	0x57, 0x9d, 0x57, 0xce, 0x5d, 0x38, 0xac, 0x39, 0xee, 0x3c, 0x9e, 0xe7, 0xae, 0x3a, 0x9d, 0xf0,
	0x35, 0x58, 0x2c, 0x9e, 0xcc, 0x6e, 0x99, 0xe9, 0xcc, 0x00, 0xed, 0xfe, 0x8c, 0x01, 0x59, 0xfa,
	0xe2, 0xb9, 0xe8, 0x96, 0xf9, 0x9e, 0x42, 0x5f, 0xb9, 0x33, 0x39, 0x7d, 0x71, 0x5b, 0x76, 0xcb,
	0xac, 0x4f, 0xa1, 0xaf, 0xdc, 0x88, 0x5a, 0xeb, 0x03, 0x7f, 0xc2, 0xfa, 0xcf, 0x4f, 0xcf, 0x75,
	0xe5, 0xec, 0x5c, 0x57, 0xfe, 0x9e, 0xeb, 0xca, 0x97, 0x0b, 0xbd, 0x76, 0x76, 0xa1, 0xd7, 0x7e,
	0x5f, 0xe8, 0xb5, 0x83, 0x07, 0x1e, 0x66, 0x87, 0x93, 0xa1, 0x61, 0x93, 0xb1, 0xd9, 0xc7, 0x6c,
	0x97, 0x37, 0xf7, 0xc5, 0x88, 0x0c, 0xd1, 0xc8, 0xcc, 0xbe, 0x6d, 0xec, 0x38, 0x70, 0xe9, 0xb0,
	0x2d, 0x9e, 0xe2, 0x47, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xfa, 0xf1, 0xab, 0x59, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateBitcannaid(ctx context.Context, in *MsgCreateBitcannaid, opts ...grpc.CallOption) (*MsgCreateBitcannaidResponse, error)
	UpdateBitcannaid(ctx context.Context, in *MsgUpdateBitcannaid, opts ...grpc.CallOption) (*MsgUpdateBitcannaidResponse, error)
	DeleteBitcannaid(ctx context.Context, in *MsgDeleteBitcannaid, opts ...grpc.CallOption) (*MsgDeleteBitcannaidResponse, error)
	CreateSupplychain(ctx context.Context, in *MsgCreateSupplychain, opts ...grpc.CallOption) (*MsgCreateSupplychainResponse, error)
	UpdateSupplychain(ctx context.Context, in *MsgUpdateSupplychain, opts ...grpc.CallOption) (*MsgUpdateSupplychainResponse, error)
	DeleteSupplychain(ctx context.Context, in *MsgDeleteSupplychain, opts ...grpc.CallOption) (*MsgDeleteSupplychainResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateBitcannaid(ctx context.Context, in *MsgCreateBitcannaid, opts ...grpc.CallOption) (*MsgCreateBitcannaidResponse, error) {
	out := new(MsgCreateBitcannaidResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/CreateBitcannaid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBitcannaid(ctx context.Context, in *MsgUpdateBitcannaid, opts ...grpc.CallOption) (*MsgUpdateBitcannaidResponse, error) {
	out := new(MsgUpdateBitcannaidResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/UpdateBitcannaid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBitcannaid(ctx context.Context, in *MsgDeleteBitcannaid, opts ...grpc.CallOption) (*MsgDeleteBitcannaidResponse, error) {
	out := new(MsgDeleteBitcannaidResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/DeleteBitcannaid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSupplychain(ctx context.Context, in *MsgCreateSupplychain, opts ...grpc.CallOption) (*MsgCreateSupplychainResponse, error) {
	out := new(MsgCreateSupplychainResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/CreateSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSupplychain(ctx context.Context, in *MsgUpdateSupplychain, opts ...grpc.CallOption) (*MsgUpdateSupplychainResponse, error) {
	out := new(MsgUpdateSupplychainResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/UpdateSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSupplychain(ctx context.Context, in *MsgDeleteSupplychain, opts ...grpc.CallOption) (*MsgDeleteSupplychainResponse, error) {
	out := new(MsgDeleteSupplychainResponse)
	err := c.cc.Invoke(ctx, "/bcna.bcna.Msg/DeleteSupplychain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateBitcannaid(context.Context, *MsgCreateBitcannaid) (*MsgCreateBitcannaidResponse, error)
	UpdateBitcannaid(context.Context, *MsgUpdateBitcannaid) (*MsgUpdateBitcannaidResponse, error)
	DeleteBitcannaid(context.Context, *MsgDeleteBitcannaid) (*MsgDeleteBitcannaidResponse, error)
	CreateSupplychain(context.Context, *MsgCreateSupplychain) (*MsgCreateSupplychainResponse, error)
	UpdateSupplychain(context.Context, *MsgUpdateSupplychain) (*MsgUpdateSupplychainResponse, error)
	DeleteSupplychain(context.Context, *MsgDeleteSupplychain) (*MsgDeleteSupplychainResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateBitcannaid(ctx context.Context, req *MsgCreateBitcannaid) (*MsgCreateBitcannaidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBitcannaid not implemented")
}
func (*UnimplementedMsgServer) UpdateBitcannaid(ctx context.Context, req *MsgUpdateBitcannaid) (*MsgUpdateBitcannaidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBitcannaid not implemented")
}
func (*UnimplementedMsgServer) DeleteBitcannaid(ctx context.Context, req *MsgDeleteBitcannaid) (*MsgDeleteBitcannaidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBitcannaid not implemented")
}
func (*UnimplementedMsgServer) CreateSupplychain(ctx context.Context, req *MsgCreateSupplychain) (*MsgCreateSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSupplychain not implemented")
}
func (*UnimplementedMsgServer) UpdateSupplychain(ctx context.Context, req *MsgUpdateSupplychain) (*MsgUpdateSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSupplychain not implemented")
}
func (*UnimplementedMsgServer) DeleteSupplychain(ctx context.Context, req *MsgDeleteSupplychain) (*MsgDeleteSupplychainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSupplychain not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateBitcannaid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBitcannaid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBitcannaid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/CreateBitcannaid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBitcannaid(ctx, req.(*MsgCreateBitcannaid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBitcannaid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBitcannaid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBitcannaid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/UpdateBitcannaid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBitcannaid(ctx, req.(*MsgUpdateBitcannaid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBitcannaid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBitcannaid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBitcannaid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/DeleteBitcannaid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBitcannaid(ctx, req.(*MsgDeleteBitcannaid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/CreateSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSupplychain(ctx, req.(*MsgCreateSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/UpdateSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSupplychain(ctx, req.(*MsgUpdateSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSupplychain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSupplychain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSupplychain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bcna.bcna.Msg/DeleteSupplychain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSupplychain(ctx, req.(*MsgDeleteSupplychain))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bcna.bcna.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateBitcannaid",
			Handler:    _Msg_CreateBitcannaid_Handler,
		},
		{
			MethodName: "UpdateBitcannaid",
			Handler:    _Msg_UpdateBitcannaid_Handler,
		},
		{
			MethodName: "DeleteBitcannaid",
			Handler:    _Msg_DeleteBitcannaid_Handler,
		},
		{
			MethodName: "CreateSupplychain",
			Handler:    _Msg_CreateSupplychain_Handler,
		},
		{
			MethodName: "UpdateSupplychain",
			Handler:    _Msg_UpdateSupplychain_Handler,
		},
		{
			MethodName: "DeleteSupplychain",
			Handler:    _Msg_DeleteSupplychain_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bcna/bcna/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateBitcannaid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBitcannaid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBitcannaid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Bcnaid) > 0 {
		i -= len(m.Bcnaid)
		copy(dAtA[i:], m.Bcnaid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bcnaid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBitcannaidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBitcannaidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBitcannaidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBitcannaid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBitcannaid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBitcannaid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Bcnaid) > 0 {
		i -= len(m.Bcnaid)
		copy(dAtA[i:], m.Bcnaid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bcnaid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBitcannaidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBitcannaidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBitcannaidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBitcannaid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBitcannaid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBitcannaid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBitcannaidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBitcannaidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBitcannaidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Supplyextra) > 0 {
		i -= len(m.Supplyextra)
		copy(dAtA[i:], m.Supplyextra)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyextra)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Supplyinfo) > 0 {
		i -= len(m.Supplyinfo)
		copy(dAtA[i:], m.Supplyinfo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyinfo)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Product) > 0 {
		i -= len(m.Product)
		copy(dAtA[i:], m.Product)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Product)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Supplyextra) > 0 {
		i -= len(m.Supplyextra)
		copy(dAtA[i:], m.Supplyextra)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyextra)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Supplyinfo) > 0 {
		i -= len(m.Supplyinfo)
		copy(dAtA[i:], m.Supplyinfo)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Supplyinfo)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Info) > 0 {
		i -= len(m.Info)
		copy(dAtA[i:], m.Info)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Info)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Product) > 0 {
		i -= len(m.Product)
		copy(dAtA[i:], m.Product)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Product)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSupplychain) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSupplychain) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSupplychain) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSupplychainResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSupplychainResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSupplychainResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateBitcannaid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bcnaid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateBitcannaidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateBitcannaid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Bcnaid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateBitcannaidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBitcannaid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteBitcannaidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Product)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyinfo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyextra)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Product)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Info)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyinfo)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Supplyextra)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSupplychain) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSupplychainResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBitcannaid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBitcannaid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBitcannaid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bcnaid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bcnaid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBitcannaidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBitcannaidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBitcannaidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBitcannaid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBitcannaid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBitcannaid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bcnaid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bcnaid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBitcannaidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBitcannaidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBitcannaidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBitcannaid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBitcannaid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBitcannaid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBitcannaidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBitcannaidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBitcannaidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Product = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyinfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyinfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyextra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyextra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Product = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Info = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyinfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyinfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Supplyextra", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Supplyextra = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSupplychain) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSupplychain: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSupplychain: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSupplychainResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSupplychainResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSupplychainResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
